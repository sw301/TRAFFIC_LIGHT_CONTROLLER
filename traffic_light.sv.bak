module traffic_light_fsm(input clk,reset,output red,green,yellow
    
);
     S1_RED    = 2'd0; 
     S2_GREEN  = 2'd1; 
     S3_YELLOW = 2'd2; 

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            state <= S_RED;
            timer <= delay; 
        end else if (timer == 0) begin
            state <= next_state; 
            timer <= delay;     
        end else begin
            timer <= timer - 1; 
        end
    end

    // Next state 
    always @(*) begin
        case (state)
            S1_RED:    next_state = S_GREEN;   
            S2_GREEN:  next_state = S_YELLOW; 
            S3_YELLOW: next_state = S_RED;   
              
        endcase
    end

    // Output logic 
    always @(*) begin
        case (state)
            S1_RED:    light = 3'b100; 
            S2_GREEN:  light = 3'b001;
            S_YELLOW: light = 3'b010; 
            d3efault:  light = 3'b100;
        endcase
    end

endmodule
